% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve_bernouilli.R
\name{solve_bernoulli}
\alias{solve_bernoulli}
\title{'solve_bernoulli' est une fonction qui résout une équation différentielle de Bernoulli.}
\usage{
solve_bernoulli(t, y_init, params, f)
}
\arguments{
\item{t}{L'intervalle de temps pour lequel nous voulons la solution}

\item{params}{Une liste contenant les fonctions a(t) et b(t)}

\item{y}{La condition initiale pour y}
}
\value{
La solution de l'équation différentielle pour chaque point dans l'intervalle de temps.
}
\description{
dy/dt = a(t)*y + b(t)
}
\examples{
a <- function(t) { return(sin(t)-exp(-t^2)) }
b <- function(t) { return(cos(t^3)) }
d <- function(t) { return(tan(t)) }
y_particular <- function(t) { return(exp(t)) }
t <- 10
y_init <- 1 # y(0) = 1
y_init
params <- riccati_to_bernoulli(a(t),b(t),d(t),y_particular(t))
solve_bernoulli(t, y_init, params)
couleurs <- rainbow(10)
plot(solve_bernoulli(t, y_init, params), type = "l", col = couleurs[1])
for (i in 2:10) {
  for (m in 1:10) {
      lines(solve_bernoulli(i, m, params), col = couleurs[m])
        }
        }

}
